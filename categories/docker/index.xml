<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>docker on 🦁泽梅尔的驻留地</title><link>https://zemelling.github.io/categories/docker/</link><description>Recent content in docker on 🦁泽梅尔的驻留地</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy; 2021 &lt;a href="https://zemelling.github.io/">Zemel Ling&lt;/a> | &lt;a href="https://beian.miit.gov.cn">闽ICP备2021013106号&lt;/a></copyright><lastBuildDate>Sat, 01 May 2021 18:35:28 +0800</lastBuildDate><atom:link href="https://zemelling.github.io/categories/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>使用Docker部署Nexus3</title><link>https://zemelling.github.io/posts/%E4%BD%BF%E7%94%A8docker%E9%83%A8%E7%BD%B2nexus3/</link><pubDate>Sat, 01 May 2021 18:35:28 +0800</pubDate><guid>https://zemelling.github.io/posts/%E4%BD%BF%E7%94%A8docker%E9%83%A8%E7%BD%B2nexus3/</guid><description>version: &amp;quot;3.7&amp;quot; services: nexus3: image: sonatype/nexus3 restart: unless-stopped ports: - &amp;quot;8081:8081&amp;quot; volumes: - nexus_data:/nexus-data container_name: nexus3 volumes: nexus_data:</description></item><item><title>Docker常用命令</title><link>https://zemelling.github.io/posts/docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link><pubDate>Fri, 30 Apr 2021 17:40:59 +0800</pubDate><guid>https://zemelling.github.io/posts/docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid><description>进入容器 docker exec -it [容器ID] /bin/bash 创建卷 docker volume create my-vol 列出所有卷 docker volume ls 查看卷详情 docker volume inspect my-vol 移除卷 docker volume rm my-vol 修改 Docker 的默认存储路径 sudo docker info sudo nano /etc/docker/daemon.json { &amp;quot;data-root&amp;quot;: &amp;quot;/www/docker&amp;quot; }</description></item><item><title>使用Docker运行Consul</title><link>https://zemelling.github.io/posts/%E4%BD%BF%E7%94%A8docker%E8%BF%90%E8%A1%8Cconsul/</link><pubDate>Fri, 23 Apr 2021 16:16:07 +0800</pubDate><guid>https://zemelling.github.io/posts/%E4%BD%BF%E7%94%A8docker%E8%BF%90%E8%A1%8Cconsul/</guid><description>单节点 开发模式 mkdir -p /data/consul-data mkdir -p /data/consul-conf docker run -d -p 8500:8500 -p 8600:8600/udp -v /data/consul-data:/consul/data -v /data/consul-conf:/consul/config --name=consul_server consul agent -dev -ui -node=consul-server -bootstrap-expect=1 -client=0.0.0.0 -data-dir /consul/data -config-dir /consul/config</description></item><item><title>使用Docker运行Redis</title><link>https://zemelling.github.io/posts/%E4%BD%BF%E7%94%A8docker%E8%BF%90%E8%A1%8Credis/</link><pubDate>Fri, 23 Apr 2021 14:43:14 +0800</pubDate><guid>https://zemelling.github.io/posts/%E4%BD%BF%E7%94%A8docker%E8%BF%90%E8%A1%8Credis/</guid><description>Use Command docker run -d --restart=always --name redis -p 6379:6379 redis --requirepass 123456</description></item><item><title>使用Docker运行MongoDB</title><link>https://zemelling.github.io/posts/%E4%BD%BF%E7%94%A8docker%E8%BF%90%E8%A1%8Cmongodb/</link><pubDate>Fri, 23 Apr 2021 12:37:29 +0800</pubDate><guid>https://zemelling.github.io/posts/%E4%BD%BF%E7%94%A8docker%E8%BF%90%E8%A1%8Cmongodb/</guid><description>Use Docker-Compose version: '3.1' services: mongo: image: mongo restart: always environment: MONGO_INITDB_ROOT_USERNAME: root MONGO_INITDB_ROOT_PASSWORD: example volumes: - db_store:/data/db ports: - 27017:27017 volumes: db_store: {}</description></item><item><title>使用Docker部署Trilium</title><link>https://zemelling.github.io/posts/%E4%BD%BF%E7%94%A8docker%E9%83%A8%E7%BD%B2trilium/</link><pubDate>Thu, 25 Mar 2021 13:26:38 +0800</pubDate><guid>https://zemelling.github.io/posts/%E4%BD%BF%E7%94%A8docker%E9%83%A8%E7%BD%B2trilium/</guid><description>docker-compose version: &amp;quot;3.7&amp;quot; services: trilium: image: zadam/trilium restart: unless-stopped ports: - &amp;quot;8080:8080&amp;quot; volumes: - /data/trilium/data:/home/node/trilium-data docker-compose up -d 遇到容器里的权限问题 internal/fs/utils.js:269 throw err; ^ Error: EACCES: permission denied, mkdir '/home/node/trilium-data/log' at Object.mkdirSync (fs.js:921:3) at Object.&amp;lt;anonymous&amp;gt; (/usr/src/app/src/services/log.js:7:8) at Module._compile (internal/modules/cjs/loader.js:1015:30) at Object.Module._extensions..js (internal/modules/cjs/loader.js:1035:10) at Module.load (internal/modules/cjs/loader.js:879:32) at Function.Module._load (internal/modules/cjs/loader.js:724:14) at Module.require (internal/modules/cjs/loader.js:903:19) at require (internal/modules/cjs/helpers.js:74:18) at Object.&amp;lt;anonymous&amp;gt; (/usr/src/app/src/app.js:1:13) at Module._compile (internal/modules/cjs/loader.js:1015:30) { errno: -13, syscall: 'mkdir', code: 'EACCES',</description></item><item><title>使用Docker部署Caddy</title><link>https://zemelling.github.io/posts/%E4%BD%BF%E7%94%A8docker%E9%83%A8%E7%BD%B2caddy/</link><pubDate>Wed, 24 Mar 2021 18:32:49 +0800</pubDate><guid>https://zemelling.github.io/posts/%E4%BD%BF%E7%94%A8docker%E9%83%A8%E7%BD%B2caddy/</guid><description>docker-compose.yml version: &amp;quot;3.7&amp;quot; services: caddy: image: caddy restart: unless-stopped ports: - &amp;quot;80:80&amp;quot; - &amp;quot;443:443&amp;quot; volumes: - /data/caddy/Caddyfile:/etc/caddy/Caddyfile - /data/caddy/site:/srv - caddy_data:/data - caddy_config:/config container_name: caddy volumes: caddy_data: caddy_config: docker-compose up -d 注意一点 /data/caddy/Caddyfile 需要提前创建好 Caddyfile Caddy有两种配置格式：1. json 2. Caddyfile，由于Ca</description></item></channel></rss>