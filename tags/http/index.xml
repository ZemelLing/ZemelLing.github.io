<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>http on 泽梅尔的驻留地</title><link>https://www.zling.site/tags/http/</link><description>Recent content in http on 泽梅尔的驻留地</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 02 Jul 2021 12:49:27 +0800</lastBuildDate><atom:link href="https://www.zling.site/tags/http/index.xml" rel="self" type="application/rss+xml"/><item><title>CSharp中发送HTTP请求的方法</title><link>https://www.zling.site/post/CSharp%E4%B8%AD%E5%8F%91%E9%80%81HTTP%E8%AF%B7%E6%B1%82%E7%9A%84%E6%96%B9%E6%B3%95/</link><pubDate>Fri, 02 Jul 2021 12:49:27 +0800</pubDate><guid>https://www.zling.site/post/CSharp%E4%B8%AD%E5%8F%91%E9%80%81HTTP%E8%AF%B7%E6%B1%82%E7%9A%84%E6%96%B9%E6%B3%95/</guid><description>发送 Get 请求 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 // HttpClient is intended to be instantiated once per application, rather than per-use. See Remarks. static readonly HttpClient client = new HttpClient(); static async Task Main() { // Call asynchronous network methods in a try/catch block to handle exceptions. try { HttpResponseMessage response = await client.GetAsync(&amp;#34;http://www.contoso.com/&amp;#34;); response.EnsureSuccessStatusCode(); string responseBody = await response.Content.ReadAsStringAsync(); // Above three lines can be replaced with new helper method below // string responseBody = await client.GetStringAsync(uri); Console.WriteLine(responseBody); } catch(HttpRequestException e) { Console.WriteLine(&amp;#34;\nException Caught!&amp;#34;); Console.WriteLine(&amp;#34;Message :{0} &amp;#34;,e.Message); } } 发送 Post 请求 1 2 3 4 5 6 7 8 9 10 11 using (var httpClient = new HttpClient { BaseAddress = new Uri(cqcPlatformUrl) }) { httpClient.DefaultRequestHeaders.Add(&amp;#34;Test&amp;#34;, &amp;#34;TestValue&amp;#34;);</description></item></channel></rss>