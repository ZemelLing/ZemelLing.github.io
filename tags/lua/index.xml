<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>lua on 泽梅尔的驻留地</title><link>https://www.zling.site/tags/lua/</link><description>Recent content in lua on 泽梅尔的驻留地</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 05 Dec 2021 18:09:04 +0800</lastBuildDate><atom:link href="https://www.zling.site/tags/lua/index.xml" rel="self" type="application/rss+xml"/><item><title>Lua编码规范</title><link>https://www.zling.site/post/lua%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/</link><pubDate>Sun, 05 Dec 2021 18:09:04 +0800</pubDate><guid>https://www.zling.site/post/lua%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/</guid><description>转载自 lua 编码规范-abaojin 目的 统一编码标准，提高开发效率。 便于代码阅读，降低维护成本。 编码规范 命名惯例 所有lua文件命名时使用小写字母、下划线。 类名、变量名尽可能使用有意义的英文，类名使用帕斯卡命名法，变量名使用骆驼式命名法。 常量、消息号定义时用大写，单词间 _ 分割 eg:KI</description></item><item><title>ToLua项目配置</title><link>https://www.zling.site/post/ToLua%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE/</link><pubDate>Sun, 31 Oct 2021 09:39:02 +0800</pubDate><guid>https://www.zling.site/post/ToLua%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE/</guid><description>将 ToLua 下的 Assets 和 Luac53 文件夹复制到自己的工程 前往 https://github.com/topameng/tolua_runtime 将Plugins53文件夹里面的所有tolua相关的runtime底层库，都拷贝覆盖到unity工程的Plugins目录下。 打开unity编辑器，添加“LUAC_5_3”宏，回车等待编辑器编译完毕既是Lua5.3的虚拟机环境。 注意要用lu</description></item><item><title>Lua名词解释</title><link>https://www.zling.site/post/Lua%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A/</link><pubDate>Sun, 31 Oct 2021 08:52:28 +0800</pubDate><guid>https://www.zling.site/post/Lua%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A/</guid><description>Lua lua其实就是为了嵌入其它应用程序而开发的一个脚本语言， lua优势 1）lua是一个免费、小巧、简单、强大、高效、轻量级的嵌入式的脚本语言 2）它是用C语言开发的项目，所以可以在大部分的操作系统上运行 3）lua是目前速度最快的脚本语言，既可以提升语言的灵活性还可以最大限度的保留速度</description></item><item><title>Lua学习记录（三）</title><link>https://www.zling.site/post/Lua%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%E4%B8%89/</link><pubDate>Sun, 29 Aug 2021 14:44:11 +0800</pubDate><guid>https://www.zling.site/post/Lua%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%E4%B8%89/</guid><description>位和字节 位运算 运算符 操作 &amp;amp; 按位与 | 按位或 ~ 按位异或 &amp;laquo; 逻辑左移 &amp;raquo; 逻辑右移 ~ 按位取反（一元运算） Lua 中没有提供算术右移和左移，只提供了逻辑的。 无符号整数 Lua 中使用 math.ult 函数比较两个无符号整数的大小。 打包和解包二进制数据 string.pack 函数会把值打包成二进制数据 string.unpack 则反之 string.pack 和 string.unpack 的第一个参数是格式化字符串，函数</description></item><item><title>Lua学习记录（二）</title><link>https://www.zling.site/post/Lua%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%E4%BA%8C/</link><pubDate>Sat, 28 Aug 2021 10:53:56 +0800</pubDate><guid>https://www.zling.site/post/Lua%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%E4%BA%8C/</guid><description>模式匹配 函数 string.find 返回匹配的开始和结束索引 string.match 返回匹配的字符串 string.gsub 返回替换后的字符串和发生替换的次数 string.gmatch 返回函数，此函数可遍历一个字符串中所匹配的所有字串 模式 Lua 中模式使用百分号做转义字符。 字符分类 含义 . 任意字符 %a 任意字母 %c 控制字符 %d 数字 %g 除空格外的可打印字符 %l 小写字母 %p 标点符号 %s 空白字符 %u</description></item><item><title>Lua学习记录（一）</title><link>https://www.zling.site/post/Lua%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%E4%B8%80/</link><pubDate>Wed, 18 Aug 2021 22:20:23 +0800</pubDate><guid>https://www.zling.site/post/Lua%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%E4%B8%80/</guid><description>标识符 由任意字母、数字和下划线组成，同时首字符不能是数字，大小写敏感。 下划线加全大写字母（例如：_VERSION）组成的标识符，通常是特殊标识符（最好不要定义相同的标识符）。 一下是 lua 保留字 1 and break do else elseif end false goto for function if in local nil not or repeat return then true until while 注释 以下为单行注释 1 -- 单行注释 以下是多行注释 1</description></item></channel></rss>