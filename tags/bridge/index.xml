<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>bridge on 泽梅尔的驻留地</title><link>https://www.zling.site/tags/bridge/</link><description>Recent content in bridge on 泽梅尔的驻留地</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 10 May 2021 11:36:42 +0800</lastBuildDate><atom:link href="https://www.zling.site/tags/bridge/index.xml" rel="self" type="application/rss+xml"/><item><title>设计模式之模板方法模式（TemplateMethod）</title><link>https://www.zling.site/post/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E6%A8%A1%E6%9D%BF%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8FTemplateMethod/</link><pubDate>Mon, 10 May 2021 11:36:42 +0800</pubDate><guid>https://www.zling.site/post/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E6%A8%A1%E6%9D%BF%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8FTemplateMethod/</guid><description>定义 在一个操作方法中定义算法流程，其中某些步骤由子类完成。模板方法模式让子类在不变更原有流程的情况下，还能够重新定义其中的步骤。</description></item><item><title>设计模式之桥接模式（Bridge）</title><link>https://www.zling.site/post/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8FBridge/</link><pubDate>Sun, 02 May 2021 10:39:22 +0800</pubDate><guid>https://www.zling.site/post/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8FBridge/</guid><description>桥接模式 定义 将抽象和实现分离，以达到二者独立进化的目的。 UML 代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 public abstract class Implementor { public abstract void OperatorImp(); } public class ConcreteImplementor1 : Implementor { public override void OperatorImp() { Debug.Log($&amp;#34;执行{nameof(ConcreteI</description></item></channel></rss>