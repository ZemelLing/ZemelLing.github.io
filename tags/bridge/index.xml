<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>bridge on 🦁泽梅尔的驻留地</title><link>https://zemelling.github.io/tags/bridge/</link><description>Recent content in bridge on 🦁泽梅尔的驻留地</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy; 2021 &lt;a href="https://zemelling.github.io/">Zemel Ling&lt;/a> | &lt;a href="https://beian.miit.gov.cn">闽ICP备2021013106号&lt;/a></copyright><lastBuildDate>Mon, 10 May 2021 11:36:42 +0800</lastBuildDate><atom:link href="https://zemelling.github.io/tags/bridge/index.xml" rel="self" type="application/rss+xml"/><item><title>设计模式之模板方法模式（TemplateMethod）</title><link>https://zemelling.github.io/posts/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E6%A8%A1%E6%9D%BF%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8Ftemplatemethod/</link><pubDate>Mon, 10 May 2021 11:36:42 +0800</pubDate><guid>https://zemelling.github.io/posts/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E6%A8%A1%E6%9D%BF%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8Ftemplatemethod/</guid><description>定义 在一个操作方法中定义算法流程，其中某些步骤由子类完成。模板方法模式让子类在不变更原有流程的情况下，还能够重新定义其中的步骤。</description></item><item><title>设计模式之桥接模式（Bridge）</title><link>https://zemelling.github.io/posts/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8Fbridge/</link><pubDate>Sun, 02 May 2021 10:39:22 +0800</pubDate><guid>https://zemelling.github.io/posts/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8Fbridge/</guid><description>桥接模式 定义 将抽象和实现分离，以达到二者独立进化的目的。 UML 代码 public abstract class Implementor { public abstract void OperatorImp(); } public class ConcreteImplementor1 : Implementor { public override void OperatorImp() { Debug.Log($&amp;quot;执行{nam</description></item></channel></rss>