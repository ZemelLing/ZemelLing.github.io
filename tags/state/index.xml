<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>state on 泽梅尔的驻留地</title><link>https://www.zling.site/tags/state/</link><description>Recent content in state on 泽梅尔的驻留地</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 26 Apr 2021 23:41:37 +0800</lastBuildDate><atom:link href="https://www.zling.site/tags/state/index.xml" rel="self" type="application/rss+xml"/><item><title>设计模式之状态模式（State）</title><link>https://www.zling.site/post/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8FState/</link><pubDate>Mon, 26 Apr 2021 23:41:37 +0800</pubDate><guid>https://www.zling.site/post/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8FState/</guid><description>定义 让一个对象的行为随着内部状态的变更而改变，而该对象就像是换了类一样。 UML Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 using UnityEngine; public class Context { private State _state; public void Request(int value) { _state.Handle(value); } public void SetState(State state) { Debug.Log($&amp;#34;Context.SetState:{state}&amp;#34;); _state = state; } } public abstract class State</description></item></channel></rss>