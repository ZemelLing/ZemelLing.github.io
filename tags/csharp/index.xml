<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CSharp on 🦁泽梅尔的驻留地</title><link>https://www.zling.site/tags/csharp/</link><description>Recent content in CSharp on 🦁泽梅尔的驻留地</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy; 2021 &lt;a href="https://www.zling.site/">Zemel Ling&lt;/a> | &lt;a href="https://beian.miit.gov.cn">闽ICP备2021013106号&lt;/a></copyright><lastBuildDate>Tue, 28 Sep 2021 15:52:28 +0800</lastBuildDate><atom:link href="https://www.zling.site/tags/csharp/index.xml" rel="self" type="application/rss+xml"/><item><title>CSharp查缺补漏20210928</title><link>https://www.zling.site/posts/csharp%E6%9F%A5%E7%BC%BA%E8%A1%A5%E6%BC%8F20210928/</link><pubDate>Tue, 28 Sep 2021 15:52:28 +0800</pubDate><guid>https://www.zling.site/posts/csharp%E6%9F%A5%E7%BC%BA%E8%A1%A5%E6%BC%8F20210928/</guid><description>c# 7.0 特性 数字字面量的改进 数字字面量可以使用下划线来改善可读性、它们称为数字分隔符而被编译器忽略 int million = 1_000_000; var b = 0b1010_1011_1100_1101_1110_1111; // 二进制字面量可以使用0b前缀进行标识 解</description></item><item><title>使用Activator动态创建实例</title><link>https://www.zling.site/posts/%E4%BD%BF%E7%94%A8activator%E5%8A%A8%E6%80%81%E5%88%9B%E5%BB%BA%E5%AE%9E%E4%BE%8B/</link><pubDate>Mon, 27 Sep 2021 11:07:17 +0800</pubDate><guid>https://www.zling.site/posts/%E4%BD%BF%E7%94%A8activator%E5%8A%A8%E6%80%81%E5%88%9B%E5%BB%BA%E5%AE%9E%E4%BE%8B/</guid><description>Activator Activator 包含能够创建本地或远程类型对象或获取对现有远程对象的引用的方法。 重要的方法 CreateInstance 此方法通过调用与给定参数最匹配的类构造函数创建类的实例。默认情况下，如</description></item><item><title>日志依赖注入报错的问题</title><link>https://www.zling.site/posts/%E6%97%A5%E5%BF%97%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E6%8A%A5%E9%94%99%E7%9A%84%E9%97%AE%E9%A2%98/</link><pubDate>Sun, 08 Aug 2021 11:57:40 +0800</pubDate><guid>https://www.zling.site/posts/%E6%97%A5%E5%BF%97%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E6%8A%A5%E9%94%99%E7%9A%84%E9%97%AE%E9%A2%98/</guid><description>依赖注入时报如下错误的解决办法 System.InvalidOperationException: Unable to resolve service for type 'Microsoft.Extensions.Logging.ILogger' while attempting to activate 'Some.Class'. 解决办法: 主要是由于构造函数依赖注入时使用了 ILogger 而不是 ILogger&amp;lt;&amp;gt; 导致的，故改为 ILogger&amp;lt;&amp;gt; 即可。</description></item><item><title>CSharp调用非托管C++时使用回调函数遇到的问题</title><link>https://www.zling.site/posts/csharp%E8%B0%83%E7%94%A8%E9%9D%9E%E6%89%98%E7%AE%A1c++%E6%97%B6%E4%BD%BF%E7%94%A8%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</link><pubDate>Mon, 07 Jun 2021 16:36:57 +0800</pubDate><guid>https://www.zling.site/posts/csharp%E8%B0%83%E7%94%A8%E9%9D%9E%E6%89%98%E7%AE%A1c++%E6%97%B6%E4%BD%BF%E7%94%A8%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</guid><description>如果该回调函数会被定时调用时，C#代码需要将回调函数对应的委托实例化成一个静态变量后使用，以避免 GC 将委托释放导致的异常问题。 参考：https://st</description></item><item><title>CSharp中用线程安全的方式引发事件</title><link>https://www.zling.site/posts/csharp%E4%B8%AD%E7%94%A8%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E7%9A%84%E6%96%B9%E5%BC%8F%E5%BC%95%E5%8F%91%E4%BA%8B%E4%BB%B6/</link><pubDate>Sat, 29 May 2021 23:47:02 +0800</pubDate><guid>https://www.zling.site/posts/csharp%E4%B8%AD%E7%94%A8%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E7%9A%84%E6%96%B9%E5%BC%8F%E5%BC%95%E5%8F%91%E4%BA%8B%E4%BB%B6/</guid><description>在不考虑线程安全的情况下常常会写如下引发事件的代码: // 版本1 public event EventHandle&amp;lt;EventArgs&amp;gt; Something; protected virtual void OnSomething(EventArgs e) { if(Something != null) Something(this, e); } 以上代码在单线程环境下能够正常运行，但是在多线程环境下就有</description></item><item><title>CSharp中的二进制序列化</title><link>https://www.zling.site/posts/csharp%E4%B8%AD%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%BA%8F%E5%88%97%E5%8C%96/</link><pubDate>Sun, 25 Apr 2021 13:38:57 +0800</pubDate><guid>https://www.zling.site/posts/csharp%E4%B8%AD%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%BA%8F%E5%88%97%E5%8C%96/</guid><description>备注</description></item><item><title>CSharp中的XML序列化</title><link>https://www.zling.site/posts/csharp%E4%B8%AD%E7%9A%84xml%E5%BA%8F%E5%88%97%E5%8C%96/</link><pubDate>Sat, 24 Apr 2021 22:04:09 +0800</pubDate><guid>https://www.zling.site/posts/csharp%E4%B8%AD%E7%9A%84xml%E5%BA%8F%E5%88%97%E5%8C%96/</guid><description>可 XML 序列化的内容 公有类的公有可读写属性和字段 接口 ICollection 或 IEnumerable 的实现类 XmlElement 对象 XmlNode 对象 DataSet 对象 XML 使用的 Attribute 通常 Xml 元素的名称由类名或成员名称，但是也可以通过 Attribute 去控制。 XmlArrayAttribute</description></item><item><title>CSharp的Environment类</title><link>https://www.zling.site/posts/csharp%E7%9A%84environment%E7%B1%BB/</link><pubDate>Wed, 07 Apr 2021 18:39:41 +0800</pubDate><guid>https://www.zling.site/posts/csharp%E7%9A%84environment%E7%B1%BB/</guid><description>var ev = Environment.GetEnvironmentVariable(&amp;quot;ev&amp;quot;);</description></item><item><title>CSharp连接MySql数据库的方法</title><link>https://www.zling.site/posts/csharp%E8%BF%9E%E6%8E%A5mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%96%B9%E6%B3%95/</link><pubDate>Wed, 07 Apr 2021 14:51:51 +0800</pubDate><guid>https://www.zling.site/posts/csharp%E8%BF%9E%E6%8E%A5mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%96%B9%E6%B3%95/</guid><description/></item><item><title>CSharp中的Socket编程</title><link>https://www.zling.site/posts/csharp%E4%B8%AD%E7%9A%84socket%E7%BC%96%E7%A8%8B/</link><pubDate>Mon, 05 Apr 2021 18:17:03 +0800</pubDate><guid>https://www.zling.site/posts/csharp%E4%B8%AD%E7%9A%84socket%E7%BC%96%E7%A8%8B/</guid><description/></item><item><title>CSharp中的压缩和解压</title><link>https://www.zling.site/posts/csharp%E4%B8%AD%E7%9A%84%E5%8E%8B%E7%BC%A9%E5%92%8C%E8%A7%A3%E5%8E%8B/</link><pubDate>Mon, 05 Apr 2021 17:28:17 +0800</pubDate><guid>https://www.zling.site/posts/csharp%E4%B8%AD%E7%9A%84%E5%8E%8B%E7%BC%A9%E5%92%8C%E8%A7%A3%E5%8E%8B/</guid><description>压缩和解压相关类 在 System.IO.Compression 中包含了有关压缩和解压的类： ZipFile ZipArchive ZipArchiveEntry DeflateStream GZipStream 文件的压缩和解压 流的压缩和解压</description></item><item><title>CSharp中序列化数据的方式</title><link>https://www.zling.site/posts/csharp%E4%B8%AD%E5%BA%8F%E5%88%97%E5%8C%96%E6%95%B0%E6%8D%AE%E7%9A%84%E6%96%B9%E5%BC%8F/</link><pubDate>Mon, 05 Apr 2021 17:23:46 +0800</pubDate><guid>https://www.zling.site/posts/csharp%E4%B8%AD%E5%BA%8F%E5%88%97%E5%8C%96%E6%95%B0%E6%8D%AE%E7%9A%84%E6%96%B9%E5%BC%8F/</guid><description>二进制序列化 XML 序列化 Json 序列化</description></item><item><title>CSharp中生成随机数据的方式</title><link>https://www.zling.site/posts/csharp%E4%B8%AD%E7%94%9F%E6%88%90%E9%9A%8F%E6%9C%BA%E6%95%B0%E6%8D%AE%E7%9A%84%E6%96%B9%E5%BC%8F/</link><pubDate>Mon, 05 Apr 2021 11:28:46 +0800</pubDate><guid>https://www.zling.site/posts/csharp%E4%B8%AD%E7%94%9F%E6%88%90%E9%9A%8F%E6%9C%BA%E6%95%B0%E6%8D%AE%E7%9A%84%E6%96%B9%E5%BC%8F/</guid><description>Test</description></item></channel></rss>