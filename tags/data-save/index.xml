<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>data save on 🦁泽梅尔的驻留地</title><link>https://zemelling.github.io/tags/data-save/</link><description>Recent content in data save on 🦁泽梅尔的驻留地</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy; 2021 &lt;a href="https://zemelling.github.io/">Zemel Ling&lt;/a> &lt;a href="https://beian.miit.gov.cn">闽ICP备2021013106号&lt;/a></copyright><lastBuildDate>Mon, 06 Sep 2021 18:56:37 +0800</lastBuildDate><atom:link href="https://zemelling.github.io/tags/data-save/index.xml" rel="self" type="application/rss+xml"/><item><title>Unity中使用Addressable</title><link>https://zemelling.github.io/posts/unity%E4%B8%AD%E4%BD%BF%E7%94%A8addressable/</link><pubDate>Mon, 06 Sep 2021 18:56:37 +0800</pubDate><guid>https://zemelling.github.io/posts/unity%E4%B8%AD%E4%BD%BF%E7%94%A8addressable/</guid><description>使用步骤 标记资源为Addressable 方式一：在资源的Inspector界面 方式二：在 Addressables Groups 窗口 构建可寻址内容(Addressable Content) 方式一：使用 Editor</description></item><item><title>Unity中使用CustomEditor自定义脚本的Inspector面板</title><link>https://zemelling.github.io/posts/unity%E4%B8%AD%E4%BD%BF%E7%94%A8customeditor%E8%87%AA%E5%AE%9A%E4%B9%89%E8%84%9A%E6%9C%AC%E7%9A%84inspector%E9%9D%A2%E6%9D%BF/</link><pubDate>Sun, 05 Sep 2021 20:43:12 +0800</pubDate><guid>https://zemelling.github.io/posts/unity%E4%B8%AD%E4%BD%BF%E7%94%A8customeditor%E8%87%AA%E5%AE%9A%E4%B9%89%E8%84%9A%E6%9C%AC%E7%9A%84inspector%E9%9D%A2%E6%9D%BF/</guid><description>自定义脚本 using UnityEngine; public class LookAtPoint : MonoBehaviour { public Vector3 lookAtPoint = Vector3.zero; void Update() { transform.LookAt(lookAtPoint); } } 使用 CustomEditor 特性 using UnityEngine; using UnityEditor; [CustomEditor(typeof(LookAtPoint))] // 指定为哪个组件自定义编辑器界面 [CanEditMultipleObjects] // 指示Unity可以为多个对象的同一组件同时编辑</description></item><item><title>Unity中实现存档的方式</title><link>https://zemelling.github.io/posts/unity%E4%B8%AD%E5%AE%9E%E7%8E%B0%E5%AD%98%E6%A1%A3%E7%9A%84%E6%96%B9%E5%BC%8F/</link><pubDate>Sun, 04 Apr 2021 13:23:06 +0800</pubDate><guid>https://zemelling.github.io/posts/unity%E4%B8%AD%E5%AE%9E%E7%8E%B0%E5%AD%98%E6%A1%A3%E7%9A%84%E6%96%B9%E5%BC%8F/</guid><description>PlayerPrefs PlayerPrefs 是 Unity 中用于存储用户数据的类，且只能够存储一些基本类型数据。 存储路径 存储路径取决于所在操作系统。 Windows: 存在注册表的 HKCU\Software\ExampleCompanyName\ExampleProductName Key 下 Windows Store Apps: 存在 %userprofile%\AppData\Local\Packages[ProductPackageId]\LocalState\playerprefs.dat 文件里 macOS: ~/Library/Preferences/com.ExampleCompanyName.ExampleProductName.plist Linux: ~/.config/unity3d/ExampleCompanyName/ExampleProductName 静态方</description></item></channel></rss>